# Vatu: PHP Compatibility
# Description: Test the project against multiple php versions.
# Version: 1.1.0
# Author: Michael Bragg <mike@vatu.co.uk>
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: "PHP Compatatibility"

on:
  workflow_call:

    inputs:

      runs-on:
        description: "Runner to be used by the parent workflow."
        required: false
        type: string
        default: ubuntu-latest

jobs:

  php-lint:
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - '8.0'
          - '8.1'
          - '8.2'

    name: "PHP Lint ${{ matrix.php-version }}"
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 10

    steps:

      - name: "Checks out the repository."
        uses: "actions/checkout@v2"

      - name: "Set up PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer,parallel-lint
          ini-file: none

      - name: "Get Composer Cache Directory."
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Sets up Caching."
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-composer-build-${{ hashFiles('composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-composer-build-

      - name: "Add Vatu secrets for Composer dependencies."
        if: "${{ secrets.COMPOSER_VATU_USERNAME != '' && secrets.COMPOSER_VATU_KEY != '' }}"
        run: |
          composer config http-basic.satispress.vatu.dev ${{ secrets.COMPOSER_VATU_USERNAME }} ${{ secrets.COMPOSER_VATU_KEY }}

      - name: "Build site."
        run: composer update --no-interaction --prefer-dist --no-scripts --no-dev

      - name: "Run Parallel Lint test."
        run: |
          parallel-lint --exclude tools -e php --show-deprecated ./

  php-compatibility:

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - '8.0'
          - '8.1'
          - '8.2'

    name: "PHP Compatibility ${{ matrix.php-version }}"
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 10

    steps:

      - name: "Checks out the repository."
        uses: "actions/checkout@v2"

      - name: "Set up PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer,phpcs

      - name: "Install PHPCompatibility"
        run: |
          mkdir -p tools/php-compat
          composer --working-dir=tools/php-compat init --name "vatu/php-compatibility" --stability dev
          composer --working-dir=tools/php-compat config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
          composer --working-dir=tools/php-compat require --dev phpcsstandards/phpcsdevtools:^1.0
          composer --working-dir=tools/php-compat require phpcompatibility/php-compatibility:"dev-develop as 9.99.99"
          composer --working-dir=tools/php-compat require phpcompatibility/phpcompatibility-wp:"*"

      - name: "Download PHPCompatibility config"
        run: |
          curl -L https://github.com/vatu-team/workflows/raw/php-compatability/config/phpcompatibility.xml.dist --output phpcompatibility.xml.dist --fail
        continue-on-error: false

      - name: "Get Composer Cache Directory."
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Sets up Caching."
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-composer-build-${{ hashFiles('composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-composer-build-

      - name: "Add Vatu secrets for Composer dependencies."
        if: "${{ secrets.COMPOSER_VATU_USERNAME != '' && secrets.COMPOSER_VATU_KEY != '' }}"
        run: |
          composer config http-basic.satispress.vatu.dev ${{ secrets.COMPOSER_VATU_USERNAME }} ${{ secrets.COMPOSER_VATU_KEY }}

      - name: "Build site."
        run: composer update --no-interaction --prefer-dist --no-scripts --no-dev

      - name: Log debug information
        run: |
          php --version
          phpcs --version
          phpcs -i

      - name: "Run PHPCS on project specific files."
        run: |
          phpcs -p -s --colors --standard=phpcompatibility.xml.dist --extensions=php --runtime-set testVersion ${{ matrix.php-version }} ./
