---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# Vatu:    PHP CodeSniffer
# Version: 1.2.0
# Author:  Michael Bragg <mike@vatu.co.uk>

name: "PHP CodeSniffer"

on:
  workflow_call:

    inputs:
      # Runner to be used by the parent workflow.
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      # PHP version used by project.
      version-php:
        required: false
        type: string
        default: "7.4"
      # Composer version to be used by this workflow.
      version-composer:
        required: false
        type: string
        default: "v2"

jobs:

  php-codesniffer:

    name: "PHP CodeSniffer"
    runs-on: ${{ inputs.runs-on }}

    steps:

      - name: "Checks out the repository."
        uses: "actions/checkout@v4.0.0"

      - name: "Install PHP with Composer tool."
        uses: "shivammathur/setup-php@2.26.0"
        with:
          php-version: "${{ inputs.version-php }}"
          coverage: "none"
          ini-values: "memory_limit=-1"
          tools: composer:${{ inputs.version-composer }}
          ini-file: none
        env:
          COMPOSER_TOKEN: ${{ secrets.github-token }}

      - name: "Get Composer Cache Directory."
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: "Sets up Caching."
        uses: "actions/cache@v3.3.2"
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-composer-tools-${{ hashFiles('tools/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-composer-tools-

      - name: "Install dependencies."
        run: composer install --working-dir=tools --no-interaction --prefer-dist

      - name: "Run PHP CodeSniffer Test."
        run: composer run test-phpcs
